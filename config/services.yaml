# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Service/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class

    App\Service\Factory\Database:
        class: App\Service\Factory\Database
        arguments: ['%database_url%', '%database_driver%']

    App\Service\Factory\HttpClient:
        class: App\Service\Factory\HttpClient

    App\Service\Api\HttpClient\ApiHttpClient:
        class: App\Service\Api\HttpClient\ApiHttpClient
        factory: ['@App\Service\Factory\HttpClient', getHttpClient]

    App\Repository\ProductRepository:
        class: App\Repository\ProductRepository
        factory: ['@App\Service\Factory\Database', getRepository]
        arguments:
            - App\Entity\Product

    App\Repository\OrderRepository:
        class: App\Repository\OrderRepository
        factory: ['@App\Service\Factory\Database', getRepository]
        arguments:
            - App\Entity\Order

    App\Service\Api\OrderManager:
        class: App\Service\Api\OrderManager
        arguments: ['@App\Repository\ProductRepository', '@App\Repository\ProductRepository', '@App\Service\Api\HttpClient\ApiHttpClient']

    App\Service\Api\ProductManager:
        class: App\Service\Api\OrderManager
        arguments: ['@App\Repository\ProductRepository']

    App\Controller\Api\OrderController:
        class: App\Controller\Api\OrderController
        arguments: ['@App\Service\Api\OrderManager']

    App\Controller\Api\ProductController:
        class: App\Controller\Api\ProductController
        arguments: ['@App\Service\Api\ProductManager']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
